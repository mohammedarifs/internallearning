name: CI/CD

on:
  workflow_dispatch:
    inputs:
      test_level:
        description: 'Level of tests to run (file, case, group)'
        required: true
        default: 'group'
#        selected_group:
#          description: "Select the test group to run"
#          required: true
#          default: "all"
#          type: choice
#          options:
#            - physical
#            - virtual
#            - task1
#            - task2
#            - sql_to_azure
#            - nas_to_azure
#            - s3_to_azure
      test_target:
        description: 'Specify the file, test case, or group to run'
        required: true
        default: 'tests/test_example.py'
        options:
          - physical
          - virtual
          - task1
          - task2
          - sql_to_azure
          - nas_to_azure
          - s3_to_azure

jobs:
  test_case_execution:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

#      - name: Set up Python
#        uses: actions/checkout@v4
#        with:
#          python-version: 3.13  #${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: python -m pip install -r requirements.txt

      - name: Run pytest
        run: |
#          pytest -m ${{ github.event.inputs.selected_group }}
          
          if [ "${{ github.event.inputs.test_level }}" == "file" ]; then
                   pytest ${{ github.event.inputs.test_target }}
                 elif [ "${{ github.event.inputs.test_level }}" == "case" ]; then
                   pytest -k ${{ github.event.inputs.test_target }}
                 elif [ "${{ github.event.inputs.test_level }}" == "group" ]; then
                   pytest -m ${{ github.event.inputs.test_target }}
                 fi
#          run: |
#            if [ "${{ github.event.inputs.filter_level_1 }}" == "file" ]; then
#              if [ -n "${{ github.event.inputs.filter_target_2 }}" ]; then
#                pytest ${{ github.event.inputs.filter_target_1 }} -k ${{ github.event.inputs.filter_target_2 }}
#              else
#                pytest ${{ github.event.inputs.filter_target_1 }}
#              fi
#            elif [ "${{ github.event.inputs.filter_level_1 }}" == "group" ]; then
#              pytest -m ${{ github.event.inputs.filter_target_1 }}
#            fi
